<?npl
--[[
Title: earth
Author: big
Date: 2017/2/10
Desc: 
]]
NPL.load("(gl)Mod/EarthMod/SelectLocationTask.lua");

local SelectLocationTask = commonlib.gettable("MyCompany.Aries.Game.Tasks.SelectLocationTask");

-- 学校名称
local schoolName = request:get("schoolName");

-- 矩形范围经纬度最大最小值
local minlat = request:get("minlat");
local minlon = request:get("minlon");
local maxlat = request:get("maxlat");
local maxlon = request:get("maxlon");

-- 当前人物地图标记点经纬度
local curLat = request:get("curLat");
local curLon = request:get("curLon");

if(is_ajax()) then
    add_action('wp_ajax_send_coordinate' , function()
        --通知Paracraft UI
        SelectLocationTask.setCoordinate(minlat,minlon,maxlat,maxlon,schoolName);
        response:send();
        return;
    end);

    add_action('wp_ajax_get_player_coordinate' , function()
        --获取人物坐标
        local playerLon, playerLat, allPlayerPo, name = SelectLocationTask:getPlayerCoordinate();
        local ret = {};
        ret["lon"] = playerLon;
        ret["lat"] = playerLat;
        ret["allPlayerPo"] = allPlayerPo;
        --玩家名称
        ret["selfName"] = name;
        response:send_json(ret);
        return;
    end);

    add_action('wp_ajax_set_player_coordinate' , function()
        --设置人物坐标
        SelectLocationTask:setPlayerLocation(curLon, curLat);
        response:send();
        return;
    end);

    add_action('wp_ajax_get_school_area' , function()
        --获取选定学校区域范围信息
        local ret = SelectLocationTask:getSchoolAreaInfo();
        if ret then
            response:send_json(ret);
            return;
        else
            response:send_json();
            return;
        end
    end);

    return;
end

PAGE_NO_SIDE_BAR = true;
wp_enqueue_style("leaflet",             "/wp-content/pages/earth/assets/css/leaflet.css");
wp_enqueue_style("drawingManagerCss",   "http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css");
wp_enqueue_script("jquery",             "/wp-includes/js/jquery/jquery.min.js");
wp_enqueue_script("leaflet",            "/wp-content/pages/earth/js/leaflet.js");
wp_enqueue_script("coordtransform",     "/wp-content/pages/earth/js/coordtransform.js");
wp_enqueue_script("typeahead",          "/wp-content/pages/earth/js/bootstrap3-typeahead.min.js");
wp_enqueue_script("baiduMap",           "/wp-content/pages/earth/js/mapBd.js");
wp_enqueue_script("drawingManager",     "/wp-content/pages/earth/js/DrawingManager_min.js");
?>
<style>

    ul{
        list-style: none;
        margin: 0px;
        padding: 0px;
    }
    .earth-main{
        /*position: relative;*/
    }
    .search{
        /*position: absolute;*/
        /*z-index: 999;*/
        /*border:1px solid #e67b93;*/
        /*left:80px;*/
        /*top:20px;*/
        /*border-radius: 5px;*/
    }
    .search-inp{
        height:30px;
        width:200px;
        padding:0px 10px;
        border:1px solid #999;
        border-radius: 5px;
    }
    .imgCls{
        cursor: pointer;
        height: 19px;
        width: 19px;
        box-shadow: 1px 1px 2px #888888;
    }
    .earth-main .spot-light {
        text-align:center;
        margin-top: 0;
        margin-bottom: 15px;
        font-weight: 100;
    }
    .earth-main button {
        margin-top: 20px;
    }
    .container{
        /*width:100% !important;*/
        /*margin:0px !important;*/
        /*padding: 0px !important;*/
    }
    .leaflet-marker-icon{
        width:16px;
        height:16px;
    }
    #map{
        /*width:100%;*/
        position:fixed !important;
        top:0px !important;
        bottom:0px !important;
        left:0px !important;
        right:0px !important;
        z-index:999 !important;
    }
    /*.query-list{*/
        /*width:98%;*/
        /*margin: auto;*/
        /*border-left:1px solid #000;*/
        /*border-right:1px solid #000;*/
        /*border-bottom:1px solid #000;*/
        /*border:1px solid #000;*/
        /*border-radius: 5px;*/
    /*}*/
    /*.query-list li{
        width:100%;
        text-indent: 2px;
    }*/
    .typeahead{
        width:100%;
        padding: 0px !important;
        margin: 0px !important;
    }
    .typeahead a{
        width:100%;
        word-break:keep-all;/* 不换行 */
        white-space:nowrap;/* 不换行 */
        overflow:hidden;/* 内容超出宽度时隐藏超出部分的内容 */
        text-overflow:ellipsis;/* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/
    }
    .anchorBL{  
       display:none;  
    } 
</style>

<div class="earth-main">
        <!-- <div class='search'> -->
            <!-- <input class='search-inp' data-provide="typeahead" placeholder="请输入校园名称" /> -->
            <!-- <ul class="query-list"> -->
                <!-- <li>清华大学</li>
                <li>北京大学</li>
                <li>湖南大学</li>
                <li>湖南科技大学</li>
                <li>浙江大学</li> -->
            <!-- </ul> -->
        <!-- </div> -->
        <div id="map"></div>
        <!-- <button type="button" ng-click="confirm()" class="btn btn-success btn-lg btn-block">确定</button> -->
</div>

<script>

    // 玩家当前经纬度坐标
    var player_lat,palyer_lng;

    var blueIcon = new BMap.Symbol(BMap_Symbol_SHAPE_POINT, {
        scale: 1, //图标缩放大小
        fillColor: "#327ef8", //填充颜色
        fillOpacity: 0.8, //填充透明度
        strokeColor: "#327ef8", //描边颜色
        strokeOpacity: 0 //描边颜色
    });

    var redIcon = new BMap.Symbol(BMap_Symbol_SHAPE_POINT, {
        scale: 1, //图标缩放大小
        fillColor: "#f04227", //填充颜色
        fillOpacity: 0.8, //填充透明度
        strokeColor: "#f04227", //填充透明度
        strokeOpacity: 0 //描边颜色
    });

    var chinaLat = 37.899050079360935;
    var chinaLng = 102.83203125;
    var map = new BMap.Map("map",{enableMapClick: false});  // 创建地图实例
    var point = new BMap.Point(chinaLng, chinaLat); // 创建点坐标
    map.setMapStyle({style:'normal'});
    map.centerAndZoom(point, 4);   // 初始化地图，设置中心点坐标和地图级别
    map.enableScrollWheelZoom(true);    //开启鼠标滚轮缩放
    var bottom_right_navigation = new BMap.NavigationControl({anchor: BMAP_ANCHOR_BOTTOM_RIGHT, type: BMAP_NAVIGATION_CONTROL_ZOOM});   //右下角，仅包含缩放按钮
    // 添加缩放按钮控件
    map.addControl(bottom_right_navigation);

    var rec = null;

    $('body').on('keydown',function(e){
        // console.log(e.which);
        if(e.which ==37||e.which ==38||e.which ==39||e.which ==40||e.which ==32){
            return false;
        }
    })

    // 定义一个搜索控件类,即function
    function SearchControl(){
        // 默认停靠位置和偏移量
        this.defaultAnchor = BMAP_ANCHOR_TOP_LEFT;
        this.defaultOffset = new BMap.Size(10, 10);
    }

    // 通过JavaScript的prototype属性继承于BMap.Control
    SearchControl.prototype = new BMap.Control();

    // 自定义控件必须实现自己的initialize方法,并且将控件的DOM元素返回
    // 在本方法中创建个div元素作为控件的容器,并将其添加到地图容器中
    SearchControl.prototype.initialize = function(map){
      // 创建一个DOM元素
      var div = document.createElement("div");
      div.setAttribute("class","search");
      var input = document.createElement("input");
      input.setAttribute("class","search-inp");
      input.setAttribute('data-provide','typeahead');
      input.setAttribute("maxlength", "50");
      input.type = "text";
      input.placeholder = "请输入学校名称";
      div.appendChild(input);
      // 按钮绑定点击事件
      input.onclick = function(e){

      }
      // 添加DOM元素到地图中
      map.getContainer().appendChild(div);
      // 将DOM元素返回
      return div;
    }
    // 创建控件
    var searchCtrl = new SearchControl();
    // 添加到地图当中
    map.addControl(searchCtrl);

    // 定义一个搜索控件类,即function
    function ReturnControl(){
        // 默认停靠位置和偏移量
        this.defaultAnchor = BMAP_ANCHOR_BOTTOM_RIGHT;
        this.defaultOffset = new BMap.Size(12, 55);
    }

    // 通过JavaScript的prototype属性继承于BMap.Control
    ReturnControl.prototype = new BMap.Control();

    // 自定义控件必须实现自己的initialize方法,并且将控件的DOM元素返回
    // 在本方法中创建个div元素作为控件的容器,并将其添加到地图容器中
    ReturnControl.prototype.initialize = function(map){
      // 创建一个DOM元素
      var img = document.createElement("img");
      img.setAttribute("class","imgCls");
      img.src = '/wp-content/pages/earth/assets/css/images/location3.png';
      img.onclick = this._onclick;
      // 按钮绑定点击事件
      img.onclick = function(e){
        if (typeof(player_lat) != "undefined" && typeof(player_lng) != "undefined") {
            var player_point = new BMap.Point(player_lng, player_lat); // 创建点坐标  
            map.centerAndZoom(player_point, 16);   // 初始化地图，设置中心点坐标和地图级别
        }
      }
      // 添加DOM元素到地图中
      map.getContainer().appendChild(img);
      // 将DOM元素返回
      return img;
    }
    // 创建控件
    var returnCtrl = new ReturnControl();
    // 添加到地图当中
    map.addControl(returnCtrl);

    function renderUniversity(schoolName, uni){
        if(uni != null & uni != undefined){
            map.removeOverlay(rec);

            rec = new BMap.Polygon([
                new BMap.Point(uni.southWestLng, uni.northEastLat),
                new BMap.Point(uni.northEastLng, uni.northEastLat),
                new BMap.Point(uni.northEastLng, uni.southWestLat),
                new BMap.Point(uni.southWestLng, uni.southWestLat)
            ], {strokeColor:"black", fillColor:"orange", strokeWeight:1, strokeOpacity:0.5, fillOpacity:0.3, strokeStyle:"solid"});
            map.addOverlay(rec);

            map.centerAndZoom(rec.getBounds().getCenter(), 15);
            var data = rec.getBounds();
            ajaxData(schoolName, data);
        } 
    }
    function ajaxData(schoolName, d){
        var data = {
            "minlat": d.getSouthWest().lat,
            "minlon": d.getSouthWest().lng,
            "maxlat": d.getNorthEast().lat,
            "maxlon": d.getNorthEast().lng,
            "schoolName": schoolName
        };
        console.log(data)
        $.ajax({
            url:"/ajax/earth?action=send_coordinate",
            type:"post",
            dataType:"json",
            data:data,
            success:function(res){
                // 成功传送区域范围经纬度信息的情况下,清除多余的marker
                markerArray.forEach(function (item, index, array) {
                    map.removeOverlay(item);
                });
                // console.log(res);
            },
            error:function(){
                alert("请求失败")
            }
        })
    }
    $('.search-inp').on('keydown',function(e){
        if(e.which == 13){
            // searchUniversity($('.search-inp').val());
            getSchoolByName($('.search-inp').val())
        }
    })
    $('.search').on('click','.typeahead li',function(){
        // searchUniversity($(this).text());
        getSchoolByName($(this).text())

    })

    var marker = null;
    // 搜索框状态
    var searchInpState = true;
    // 所有玩家的marker集合
    var allPlayerMarkers = new Array();

    function getMapLabel() {
        var reLable = null;
        var allOverlay = map.getOverlays();
        for (var i = 0; i < allOverlay.length - 1; i++) {
            if (allOverlay[i].toString() == "[object Marker]") {
                if (allOverlay[i].getTitle() == "admin") {
                    reLable = allOverlay[i].getLabel();
                    break;
                }
            }
        }
        return reLable;
    }

    // 获取当前玩家在paracraft中的位置及是否已经进行了贴图操作,如果已经贴图,则禁用搜索框
    function getCurrentPostionInParacraft(){
        $.ajax({
            url:"/ajax/earth?action=get_player_coordinate",
            type:"get",
            dataType:"json",
            success:function(res){
                // console.log(res);
                var lon = res.lon;
                var lat = res.lat;
                var allPlayerPo = res.allPlayerPo;
                var selfName = res.selfName;
                // 如果allPlayerPo为空,则为脱机模式
                if (allPlayerPo == null || typeof(allPlayerPo) == "undefined") {
                    if (lon != null && lat != null && typeof(lon) != "undefined" && typeof(lat) != "undefined") {
                        // 判断marker是否存在,不存在则创建,存在则调用marker的setLatLng方法
                        if (marker == null) {
                            marker = new BMap.Marker(new BMap.Point(lon, lat), {icon:redIcon});
                            map.addOverlay(marker);
                        } else {
                            marker.setPosition(new BMap.Point(lon, lat));
                        }
                        if (searchInpState == true) {
                            searchInpState = false;
                            document.getElementsByClassName('search-inp')[0].disabled = true;
                        }
                        // 如果玩家位置改变，默认让玩家显示位置在地图中心
                        if (player_lat != lat || player_lng != lon) {
                            map.centerAndZoom(new BMap.Point(lon, lat), map.getZoom());
                        }
                        player_lat = lat;
                        player_lng = lon;
                    }
                    // map.setView(marker._latlng);
                }else if (allPlayerPo != null && typeof(allPlayerPo) != "undefined") {
                    if (marker != null) {
                        map.removeOverlay(marker);
                    }
                    // console.log(allPlayerPo)
                    $.each(allPlayerPo, function(playerName, postionData){
                        // falg为true时候add,反之则更新marker位置
                        var index = null;
                        for (var i = 0; i < allPlayerMarkers.length; i++) {
                            if (allPlayerMarkers[i].getLabel() != null) {
                                var _playerName = allPlayerMarkers[i].getLabel().content;
                                // console.log("each playerName is :" + playerName)
                                // console.log("playerName is :" + _playerName)
                                if (playerName == _playerName) {
                                    // console.log("will modify " + playerName + " || " + i)
                                    index = i;
                                    break;
                                }
                            }
                        }
                        if (index == null) {
                            // 将marker添加到地图中,如果playerName=me则图标为红色图标
                            var playerMarker = null;
                            if (playerName == selfName) {
                                var playerMarker = new BMap.Marker(new BMap.Point(postionData.lon, postionData.lat), {icon:redIcon});
                                var label = new BMap.Label(playerName, {offset:new BMap.Size(20, -10)});
                                label.setStyle({ maxWidth:"none" });
                                playerMarker.setLabel(label);
                                map.addOverlay(playerMarker);
                            }else{
                                var playerMarker = new BMap.Marker(new BMap.Point(postionData.lon, postionData.lat), {icon:blueIcon});
                                var label = new BMap.Label(playerName, {offset:new BMap.Size(20, -10)});
                                label.setStyle({ maxWidth:"none" });
                                playerMarker.setLabel(label);
                                map.addOverlay(playerMarker);
                            }
                            allPlayerMarkers.push(playerMarker)
                        }else{
                            // console.log("modify player postion " + index)
                            allPlayerMarkers[index].setPosition(new BMap.Point(postionData.lon, postionData.lat));
                            
                        }
                    });

                    // 如果玩家位置改变，默认让玩家显示位置在地图中心
                    if (player_lat != lat || player_lng != lon) {
                        map.centerAndZoom(new BMap.Point(lon, lat), map.getZoom());
                    }
                    player_lat = lat;
                    player_lng = lon;

                    allPlayerMarkers.forEach(function (item, index, array) {
                        if (item.getLabel() != null) {
                            var markerContent = item.getLabel().content;
                            // 默认不存在
                            var flag = false;
                            $.each(allPlayerPo, function(playerName, postionData){
                                // 如果姓名与content的值相等,则视为玩家仍然保持连接,反之删除玩家marker标记
                                if (playerName == markerContent) {
                                    flag = true;
                                }
                            });
                            if (flag == false) {
                                map.removeOverlay(item);
                            }
                        }
                    });
                }
            },
            error:function(){
                console.log("获取人物当前坐标失败");
            }
        })
    }

    // 在地图上矩形选框内点击时候,触发marker位置移动,并通知pararcraft中的人物进行跳转
    function onMapClick(e) {
        // 判断点击区域是否在矩形区域内
        if (e.point.lng != null && e.point.lat != null && typeof(e.point.lng) != "undefined" && typeof(e.point.lat) != "undefined") {
            // console.log("获取到位置信息：")
            // console.log(e.latlng.lat)
            // console.log(e.latlng.lng)
            // 判断marker是否存在,不存在则创建,存在则调用marker的setLatLng方法
            // if (marker == null) {
            //     marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map);
            // } else {
            //     marker.setLatLng([e.latlng.lat, e.latlng.lng]);
            // }
            var data = {
                "curLat": e.point.lat,
                "curLon": e.point.lng
            }
            $.ajax({
                url:"/ajax/earth?action=set_player_coordinate",
                type:"post",
                dataType:"json",
                data:data,
                success:function(res){
                    // console.log(res);                    
                },
                error:function(){
                    console.log("设置人物当前坐标失败");
                }
            })
        }
    }
    // 添加拖拽开始事件监听，避免拖拽时候触发click事件导致人物跳转
    function onMapClick2(e) {
    }

    map.addEventListener("click", onMapClick);
    map.addEventListener("dragstart", onMapClick2);

    $(function(){
        // $('.navbar').remove();
        // $('.footer').remove();

        getAllSchool();

        getSchoolAreaInfo();

        // 每一秒更新一次人物坐标信息
        setInterval("getCurrentPostionInParacraft()",1000);
    })

    // 保存所有学校marker列表的数组
    var markerArray = new Array();
    // 获取所有学校
    function getAllSchool(){
        var urlStr = "http://119.23.36.48:8098/api/wiki/models/school/getAllSchool";
        // var urlStr = "http://192.168.1.160:8098/api/wiki/models/school/getAllSchool";
        var arr = [];
            $.ajax({
                url:urlStr,
                type:"get",
                dataType:"json",
                async: false,
                success:function(res){
                    // console.log(res);
                    if(res && res.error && res.data && res.error.id == 0){
                        // 获取经纬度信息,如果获取到的经纬度信息不存在,需要提示用户
                        // res.data是数组
                        // console.log(res.data);
                        for(var i=0;i<res.data.length;i++){
                            var school = res.data[i];
                            if(school.schoolName && typeof(school.northEastLat) != "undefined" && typeof(school.southWestLat) != "undefined" && typeof(school.southWestLng) != "undefined" && typeof(school.northEastLng) != "undefined"){
                                arr.push(school.schoolName)
                            }
                        }
                        $('.search-inp').typeahead({
                            source: function(query, process) {
                                process(arr);
                            }
                        });
                        // 遍历学校列表,每一个学校绑定一个marker显示在地图上
                        if (res.data.length > 0) {
                            for (var i = 0; i < res.data.length; i++) {
                                var school = res.data[i];
                                if (school.schoolName && typeof(school.northEastLat) != "undefined" && typeof(school.southWestLat) != "undefined" && typeof(school.southWestLng) != "undefined" && typeof(school.northEastLng) != "undefined") {
                                    var schoolName = school.schoolName;
                                    var schoolSW =  new BMap.Point(school.southWestLng, school.southWestLat);
                                    var schoolNE =  new BMap.Point(school.northEastLng, school.northEastLat);
                                    var schoolBounds = new BMap.Bounds(schoolSW, schoolNE);
                                    // 将marker添加到地图中
                                    var schoolMarker = new BMap.Marker(new BMap.Point(schoolBounds.getCenter().lng, schoolBounds.getCenter().lat), {icon:blueIcon});
                                    var label = new BMap.Label(schoolName, {offset:new BMap.Size(20, -10)});
                                    label.setStyle({ maxWidth:"none", display:"none" });
                                    map.addOverlay(schoolMarker);
                                    schoolMarker.setLabel(label);
                                    // console.log("push marker " + school.schoolName)
                                    markerArray.push(schoolMarker);
                                }
                            }
                            for(var j=0;j<markerArray.length;j++){
                                markerArray[j].addEventListener('click',function(e){
                                    console.log(e)
                                    getSchoolByName(e.target.getLabel().content);
                                })
                                // 添加moouseOver mouserOut事件监听
                                markerArray[j].addEventListener('mouseover', function(e){
                                    e.target.getLabel().setStyle({ maxWidth:"none", display:"inline" });
                                })
                                markerArray[j].addEventListener('mouseout', function(e){
                                    e.target.getLabel().setStyle({ maxWidth:"none", display:"none" });
                                })
                            }
                        }
                    }else{
                        alert("学校信息不存在")
                    }
                },
                error:function(err){
                    // console.log(err.statusText);
                }
            })
    }

    // 请求学校经纬度信息
    function getSchoolByName(schoolName){
        var urlStr = "http://119.23.36.48:8098/api/wiki/models/school/getSchoolByName";
        // var urlStr = "http://192.168.1.160:8098/api/wiki/models/school/getSchoolByName";
        if (schoolName != null && typeof(schoolName) != "undefined" && $.trim(schoolName) != "") {
            urlStr = urlStr + "?name=" + $.trim(schoolName);
            $.ajax({
                url:urlStr,
                type:"get",
                dataType:"json",
                success:function(res){
                    // console.log(res);
                    document.getElementsByClassName('search-inp')[0].value = schoolName;
                    if(res && res.error && res.data && res.error.id == 0){
                        // 获取经纬度信息,如果获取到的经纬度信息不存在,需要提示用户
                        // res.data是数组
                        // console.log(res.data);
                        renderUniversity(schoolName,res.data[0]);
                    }else{
                        alert("学校信息不存在")
                    }
                },
                error:function(err){
                    // console.log(err.statusText);
                }
            })
        }
    }

    // 获取学校区域信息
    function getSchoolAreaInfo() {
        $.ajax({
            url:"/ajax/earth?action=get_school_area",
            type:"post",
            dataType:"json",
            success:function(res){
                // console.log("get school area")
                // console.log(res);
                if (res != null && typeof(res) != "undefined" && res.status == 100) {
                    // 清除所有多余的marker
                    // console.log(markerArray)
                    markerArray.forEach(function (item, index, array) {
                        // console.log("remove marker " + index)
                        map.removeOverlay(item);
                    });

                    rec = new BMap.Polygon([
                        new BMap.Point(res.data.minlon, res.data.maxlat),
                        new BMap.Point(res.data.maxlon, res.data.maxlat),
                        new BMap.Point(res.data.maxlon, res.data.minlat),
                        new BMap.Point(res.data.minlon, res.data.minlat)
                    ], {strokeColor:"black", fillColor:"orange", strokeWeight:1, strokeOpacity:0.5, fillOpacity:0.3, strokeStyle:"solid"});
                    map.addOverlay(rec);
                    map.centerAndZoom(rec.getBounds().getCenter(), 15);

                    var currentSchool = res.data.schoolName;
                    document.getElementsByClassName('search-inp')[0].disabled = true;
                    document.getElementsByClassName('search-inp')[0].value = currentSchool;
                    // map.setMaxBounds(rec.getBounds());
                    // var curPos = marker.getBounds();
                    // console.log(map);
                    // 将搜索框状态标记为不可用
                    searchInpState = false;
                    // var number = map.getZoom()
                    // map.scrollWheelZoom.disable();

                    map.setZoom(18);
                    
                }else if(res != null && typeof(res) != "undefined" && res.status == 400){
                    // 400情况下,继续请求
                    getSchoolAreaInfo();
                }else{
                    console.log("学校信息未指定")
                }
            },
            error:function(){
                 console.log("获取学校区域信息失败")
            }
        })
    }
</script>
